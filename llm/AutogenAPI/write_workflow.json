{
  "name": "write Workflow",
  "description": "Default Group  Workflow",
  "sender": {
    "type": "userproxy",
    "config": {
      "name": "userproxy",
      "llm_config": false,
      "human_input_mode": "NEVER",
      "max_consecutive_auto_reply": 5,
      "system_message": "You are a helpful assistant.",
      "is_termination_msg": null,
      "code_execution_config": {
        "work_dir": null,
        "use_docker": false
      },
      "default_auto_reply": "TERMINATE",
      "description": null
    },
    "timestamp": "2024-03-25T13:03:12.212797",
    "user_id": "default",
    "skills": null
  },
  "receiver": {
    "type": "groupchat",
    "config": {
      "name": "groupchat_assistant",
      "llm_config": {
        "config_list": [
          {
            "user_id": "default",
            "timestamp": "2024-03-23T08:47:01.824739",
            "model": "gpt4-32k",
            "base_url": "https://ai-demo-01.openai.azure.com",
            "api_type": "azure",
            "api_version": "2024-02-15-preview",
            "api_key": "f9098222916a4fb8894e36e95c2a1232",
            "description": "Azure Open AI model configuration"
          }
        ],
        "temperature": 0.1,
        "cache_seed": null,
        "timeout": null,
        "max_tokens": null,
        "extra_body": null
      },
      "human_input_mode": "NEVER",
      "max_consecutive_auto_reply": 8,
      "system_message": "You are a helpful assistant skilled at cordinating a group of other assistants to solve a task. ",
      "is_termination_msg": null,
      "code_execution_config": false,
      "default_auto_reply": "",
      "description": null
    },
    "groupchat_config": {
      "agents": [
        {
          "type": "assistant",
          "config": {
            "name": "youtube_assistant",
            "llm_config": {
              "config_list": [
                {
                  "user_id": "default",
                  "timestamp": "2024-03-23T08:47:01.824739",
                  "model": "gpt4-32k",
                  "base_url": "https://ai-demo-01.openai.azure.com",
                  "api_type": "azure",
                  "api_version": "2024-02-15-preview",
                  "api_key": "f9098222916a4fb8894e36e95c2a1232",
                  "description": "Azure Open AI model configuration"
                }
              ],
              "temperature": 0.1,
              "cache_seed": null,
              "timeout": null,
              "max_tokens": null,
              "extra_body": null
            },
            "human_input_mode": "NEVER",
            "max_consecutive_auto_reply": 8,
            "system_message": "你的责任是获取指定URL中的视频内容，请执行you2b_subtitle函数来获取指定url链接中的视频字幕,\n In the following cases, suggest python code (in a python coding block) or shell script (in a sh coding block) for the user to execute. 1. When you need to collect info, use the code to output the info you need, for example, browse or search the web, download/read a file, print the content of a webpage or a file, get the current date/time, check the operating system. After sufficient info is printed and the task is ready to be solved based on your language skill, you can solve the task by yourself. 2. When you need to perform some task with code, use the code to perform the task and output the result. Finish the task smartly. Solve the task step by step if you need to. If a plan is not provided, explain your plan first. Be clear which step uses code, and which step uses your language skill. When using code, you must indicate the script type in the code block. The user cannot provide any other feedback or perform any other action beyond executing the code you suggest. The user can't modify your code. So do not suggest incomplete code which requires users to modify. Don't use a code block if it's not intended to be executed by the user. If you want the user to save the code in a file before executing it, put # filename: <filename> inside the code block as the first line. Don't include multiple code blocks in one response. Do not ask users to copy and paste the result. Instead, use 'print' function for the output when relevant. Check the execution result returned by the user. If the result indicates there is an error, fix the error and output the code again. Suggest the full code instead of partial code or code changes. If the error can't be fixed or if the task is not solved even after the code is executed successfully, analyze the problem, revisit your assumption, collect additional info you need, and think of a different approach to try. When you find an answer, verify the answer carefully. Include verifiable evidence in your response if possible. Reply 'TERMINATE' in the end when everything is done.",
            "is_termination_msg": null,
            "code_execution_config": false,
            "default_auto_reply": "",
            "description": "Sample assistant"
          },
          "timestamp": "2024-03-25T13:01:05.714492",
          "user_id": "guestuser@gmail.com",
          "skills": [
            {
              "title": "you2be_subtitle",
              "content": "from youtube_transcript_api import YouTubeTranscriptApi\ndef you2be_subtitle(video_url):\n    # 从url获取视频ID，格式：https://www.youtube.com/watch?v=<video_id>\n    video_id = video_url.split(\"v=\")[1]\n    # 获取字幕数据\n    transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)\n    # 选择第一个字幕\n    transcript = transcript_list.find_transcript(['en'])\n    \n    # 获取字幕内容\n    subtitles = transcript.fetch()\n    subtitle_text = \"\"\n    \n    # 将字幕以文本形式输出\n    for sub in subtitles:\n        subtitle_text += \" \" + sub['text']\n    return subtitle_text\n    \n # you2be_subtitle('https://www.youtube.com/watch?v=qk5hdxFJXg8')",
              "file_name": null,
              "description": null,
              "timestamp": "2024-03-25T12:59:11.195704",
              "user_id": "default"
            }
          ]
        },
        {
          "type": "assistant",
          "config": {
            "name": "write_assistant",
            "llm_config": {
              "config_list": [
                {
                  "user_id": "default",
                  "timestamp": "2024-03-23T08:47:01.824739",
                  "model": "gpt4-32k",
                  "base_url": "https://ai-demo-01.openai.azure.com",
                  "api_type": "azure",
                  "api_version": "2024-02-15-preview",
                  "api_key": "f9098222916a4fb8894e36e95c2a1232",
                  "description": "Azure Open AI model configuration"
                }
              ],
              "temperature": 0.1,
              "cache_seed": null,
              "timeout": null,
              "max_tokens": null,
              "extra_body": null
            },
            "human_input_mode": "NEVER",
            "max_consecutive_auto_reply": 8,
            "system_message": "将获取到的you2be视频中的内容按照如下格式整理成一篇公众号文章：\nstep1: 生成包括文章标题，文章各章节小标题，并生成每一章节对应的具体段落内容\nstep2: 根据文章的内容自动的生成对应的图片。\nIn the following cases, suggest python code (in a python coding block) or shell script (in a sh coding block) for the user to execute. 1. When you need to collect info, use the code to output the info you need, for example, browse or search the web, download/read a file, print the content of a webpage or a file, get the current date/time, check the operating system. After sufficient info is printed and the task is ready to be solved based on your language skill, you can solve the task by yourself. 2. When you need to perform some task with code, use the code to perform the task and output the result. Finish the task smartly. Solve the task step by step if you need to. If a plan is not provided, explain your plan first. Be clear which step uses code, and which step uses your language skill. When using code, you must indicate the script type in the code block. The user cannot provide any other feedback or perform any other action beyond executing the code you suggest. The user can't modify your code. So do not suggest incomplete code which requires users to modify. Don't use a code block if it's not intended to be executed by the user. If you want the user to save the code in a file before executing it, put # filename: <filename> inside the code block as the first line. Don't include multiple code blocks in one response. Do not ask users to copy and paste the result. Instead, use 'print' function for the output when relevant. Check the execution result returned by the user. If the result indicates there is an error, fix the error and output the code again. Suggest the full code instead of partial code or code changes. If the error can't be fixed or if the task is not solved even after the code is executed successfully, analyze the problem, revisit your assumption, collect additional info you need, and think of a different approach to try. When you find an answer, verify the answer carefully. Include verifiable evidence in your response if possible. Reply 'TERMINATE' in the end when everything is done.",
            "is_termination_msg": null,
            "code_execution_config": false,
            "default_auto_reply": "",
            "description": "Sample assistant"
          },
          "timestamp": "2024-03-25T13:02:26.981476",
          "user_id": "guestuser@gmail.com",
          "skills": [
            {
              "title": "generate_image",
              "content": "from openai import OpenAI\n\ndef generate_image(prompt):\n    client = OpenAI(api_key=\"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\")\n    response = client.images.generate(\n        model=\"dall-e-3\",\n        prompt=prompt,\n        size=\"1024x1024\",\n        quality=\"standard\",\n        n=1,\n    )\n    image_url = response.data[0].url\n    return image_url\n\n# 使用示例\nprompt = \"a white siamese cat\"\nimage_url = generate_image(prompt)\nprint(image_url)\n",
              "file_name": null,
              "description": null,
              "timestamp": "2024-03-25T12:44:52.870075",
              "user_id": "default"
            }
          ]
        },
        {
          "type": "userproxy",
          "config": {
            "name": "userproxy",
            "llm_config": false,
            "human_input_mode": "NEVER",
            "max_consecutive_auto_reply": 5,
            "system_message": "You are a helpful assistant.",
            "is_termination_msg": null,
            "code_execution_config": {
              "work_dir": null,
              "use_docker": false
            },
            "default_auto_reply": "TERMINATE",
            "description": "A user proxy agent that executes code."
          },
          "timestamp": "2024-03-23T08:47:01.824739",
          "user_id": "default",
          "skills": null
        }
      ],
      "admin_name": "groupchat_assistant",
      "messages": [],
      "max_round": 10,
      "speaker_selection_method": "auto",
      "allow_repeat_speaker": false
    },
    "timestamp": "2024-03-25T13:03:12.212797",
    "user_id": "default",
    "skills": null
  },
  "type": "groupchat",
  "user_id": "default",
  "timestamp": "2024-03-25T13:03:12.213797",
  "summary_method": "last"
}